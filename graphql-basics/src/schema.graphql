type Query{
    me : User!
    post : Post!
    users(query : String) : [User!]!
    posts(query : String) : [Post!]!
    comments : [Comment!]!
}

type Mutation {
    createUser( data : CreateUserInput ) : User!
    deleteUser(id : ID!) : User!
    updateUser( id : ID! , data : updateUserInput!) : User!

    createPost( data : CreatePostInput ) : Post!
    deletePost( id : ID! ) : Post!

    createComment( data : CreateCommentInput ) : Comment!
    deleteComment( id : ID!) : Comment!
} 

##input type must only include scalar type and cannot have any object or complex type.
input CreateUserInput{
    name : String!
    email : String!
    age : Int!
}

input updateUserInput{
    name : String
    email : String
    age : Int
}

input CreatePostInput{
    title : String!
    body : String!
    published : Boolean!
    author : ID!
}


input CreateCommentInput{
    text : String!
    author : ID!
    post : ID!
}

type User{
    id : ID!
    name : String!
    age : Int!
    email : String!
    posts : [Post!]!
    comments : [Comment!]!
}

type Post{
    id : ID!
    title : String!
    body : String!
    published : Boolean!
    author : User!
    comments : [Comment!]!
}

type Comment{
    id : ID!
    text : String!
    author : User!
    post : Post!
}